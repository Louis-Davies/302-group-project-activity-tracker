stages:
  - build
  - setup
  - test
  - deploy

tag_checker:
  stage: build
  script:
    - python tag_checker.py $CI_COMMIT_TAG
  only:
    - tags

setup:
  stage: setup
  script:
    - cd client
    - npm install
  cache:
    paths:
      - client/node_modules/
  artifacts:
    paths:
      - client/node_modules/

#junit:
#  stage: test
#  script:
#    - cd server
#    - ./gradlew test
#
#jest:
#  stage: test
#  script:
#    - cd client
#    - npm run test

deploy-test-server:
  stage: deploy
  script:
    # Create artifact
    - cd server
    - ./gradlew bootJar
    # Move artifact to clean directory
    - rm -rf /home/gitlab-runner/test-server/
    - mkdir -p /home/gitlab-runner/test-server/
    - cp -r ./build/libs /home/gitlab-runner/test-server
    # Update bash script and restart service
    - rm -f /home/gitlab-runner/runTestServer.sh || true
    - cp ../deployment-scripts/runTestServer.sh /home/gitlab-runner/runTestServer.sh
    - sudo systemctl restart testServer


deploy-test-client:
  stage: deploy
  script:
    # Create artifact
    - cd client
    - npm run build
    # Move artifact to clean directory
    - rm -rf /home/gitlab-runner/test-client/
    - mkdir -p /home/gitlab-runner/test-client/
    - cp -r ./dist /home/gitlab-runner/test-client
    # Update bash script and restart service
    - rm -f /home/gitlab-runner/runTestClient.sh || true
    - cp ../deployment-scripts/runTestClient.sh /home/gitlab-runner/runTestClient.sh
    - sudo systemctl restart testClient



release-build:
 stage: deploy
 script:
    - fuser -k 8999/tcp 9000/tcp || true
    - cd client
    - npm install
    - npm run build-prod
    - cd ../server
    - ./gradlew bootJar
    - cd ..
    - mkdir -p ../client-prod/
    - mkdir -p ../server-prod/
    - cp -r ./client/dist/ ../client-prod/
    - cp -r ./server/build/libs ../server-prod/
    - screen -d -m bash -c "java -jar ../server-prod/libs/server-0.0.1-SNAPSHOT.jar --server.port=8999 --spring.jpa.hibernate.ddl-auto='update' --spring.datasource.url='jdbc:mariadb://db2.csse.canterbury.ac.nz:3306/seng302-2020-team700-prod' --spring.datasource.driver-class-name='org.mariadb.jdbc.Driver'  --spring.datasource.username=$DB_USER --spring.datasource.password=$DB_PASSWORD --spring.jpa.properties.hibernate.search.default.directory_provider='local-heap'"
    - screen -d -m bash -c "serve -s ../client-prod/dist -l 9000"
 artifacts:
    paths:
    - client/dist
    - server/out
 only:
    - tags
